image:
  name: docker/compose:1.29.2
  entrypoint: [ "" ]

services:
  - docker:dind

stages:
  - build
  - test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2

build:
  stage: build
  before_script:
    - export IMAGE=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
    - export BACKEND_IMAGE=$IMAGE:backend
    - apk add --no-cache openssh-client bash
    - echo $SQL_HOST
    - chmod +x ./setup_env.sh
    - bash ./setup_env.sh
    - ls -a
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $IMAGE:backend || true
    - docker-compose -f docker-compose.yml build
    - docker push $IMAGE:backend

e2e_test:
  stage: test
  script:
    - docker-compose up -d
    - docker exec ambient_frontend npx playwright install --with-deps
    - docker exec ambient_frontend npx playwright test
  artifacts:
    when: always
    paths:
        - Frontend/playwright-report/
        - Frontend/results.xml
    reports:
        junit: Frontend/results.xml
  needs: [build]

backend_to_test:
  image: ruby:latest
  stage: deploy
  needs: [e2e_test]
  before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
  script:
    - cd Backend
    - dpl --provider=heroku --app=$HEROKU_APPNAME_TEST --api-key=$HEROKU_API_KEY
  only:
    - develop

frontend_to_test:
  image: node:16.16.0
  stage: deploy
  needs: [e2e_test]
  script:
    - npm install --location=global vercel
    - vercel pull --yes --environment=development --token=$VERCEL_API_TOKEN
    - DEPLOYMENT_URL=$(vercel deploy --token=$VERCEL_API_TOKEN)
    - vercel alias set ${DEPLOYMENT_URL} quizai-test.vercel.app --scope=capstone-ambientdigital --token=$VERCEL_API_TOKEN
  only:
    - develop

backend_to_prod:
  image: ruby:latest
  stage: deploy
  needs: [e2e_test]
  before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
  script:
    - cd Backend
    - dpl --provider=heroku --app=$HEROKU_APPNAME_PROD --api-key=$HEROKU_API_KEY
  only:
    - main

frontend_to_prod:
  image: node:16.16.0
  stage: deploy
  needs: [e2e_test]
  script:
    - npm install --location=global vercel
    - vercel pull --yes --environment=production --token=$VERCEL_API_TOKEN
    - vercel deploy --prod --token=$VERCEL_API_TOKEN
  only:
    - main